// Package dto provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.0 DO NOT EDIT.
package dto

import (
	"time"

	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
)

// LoginRequest defines model for LoginRequest.
type LoginRequest struct {
	Password string `json:"password"`
	Username string `json:"username"`
}

// LoginResponseData defines model for LoginResponseData.
type LoginResponseData struct {
	AccessToken           *string               `json:"access_token,omitempty"`
	AccessTokenExpiresAt  *time.Time            `json:"access_token_expires_at,omitempty"`
	RefreshToken          *string               `json:"refresh_token,omitempty"`
	RefreshTokenExpiresAt *time.Time            `json:"refresh_token_expires_at,omitempty"`
	SessionId             *openapi_types.UUID   `json:"session_id,omitempty"`
	User                  *RegisterResponseData `json:"user,omitempty"`
}

// RegisterRequest defines model for RegisterRequest.
type RegisterRequest struct {
	Email    openapi_types.Email `json:"email"`
	FullName string              `json:"full_name"`
	Password string              `json:"password"`
	Username string              `json:"username"`
}

// RegisterResponseData defines model for RegisterResponseData.
type RegisterResponseData struct {
	CreatedAt         *time.Time `json:"created_at,omitempty"`
	Email             *string    `json:"email,omitempty"`
	FullName          *string    `json:"full_name,omitempty"`
	PasswordChangedAt *time.Time `json:"password_changed_at,omitempty"`
	Username          *string    `json:"username,omitempty"`
}

// Response defines model for Response.
type Response struct {
	Error   *string `json:"error,omitempty"`
	Message *string `json:"message,omitempty"`
}

// CreateExpenseTypeJSONBody defines parameters for CreateExpenseType.
type CreateExpenseTypeJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// GetExpenseTypesParams defines parameters for GetExpenseTypes.
type GetExpenseTypesParams struct {
	// Page Page number for pagination.
	Page *int `form:"page,omitempty" json:"page,omitempty"`

	// PerPage Number of items per page.
	PerPage *int `form:"per_page,omitempty" json:"per_page,omitempty"`
}

// RefreshTokenParams defines parameters for RefreshToken.
type RefreshTokenParams struct {
	// RefreshToken Refresh token obtained during login.
	RefreshToken string `form:"refresh_Token" json:"refresh_Token"`
}

// CreateExpenseTypeJSONRequestBody defines body for CreateExpenseType for application/json ContentType.
type CreateExpenseTypeJSONRequestBody CreateExpenseTypeJSONBody

// LoginJSONRequestBody defines body for Login for application/json ContentType.
type LoginJSONRequestBody = LoginRequest

// RegisterJSONRequestBody defines body for Register for application/json ContentType.
type RegisterJSONRequestBody = RegisterRequest
